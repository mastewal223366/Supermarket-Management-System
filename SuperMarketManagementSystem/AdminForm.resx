<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>